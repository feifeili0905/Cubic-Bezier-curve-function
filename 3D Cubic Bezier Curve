function [A1,B1,A2,B2,path_Len,xx,yy,k,b,xy1,xy2,p1,R,p2,mu,d]=cbezier(c,r,x0,angle1,angle2)



u=0:0.01:1;

d=sqrt((x0(1,1)-x0(2,1))^2+(x0(1,2)-x0(2,2))^2);
mu=size(u,2);
A0=0;
B0=0;
A3=d;
B3=0;
a=d/c;
L=[0 0; d 0];
u1(1,:)=a:a:(d-a);
u2(1,:)=(d+a):a:(2*d-a);
u3(1,:)=(-d+a):a:-a;


[k,b] = controlpointline(L,angle1,angle2);
if (0<angle1) && (angle1<90)
    x1=u1;
    y1=k(1,1)*x1+b(1,1);
elseif angle1==0
    x1=u1;
    y1=zeros(1,size(x1,2));
elseif angle1==90
    y1=u1;
    x1=zeros(1,size(y1,2));
elseif (90<angle1) && (angle1 <180)
    x1=u3;
    y1=k(1,1)*x1+b(1,1);
elseif angle1==180
    x1=u3;
    y1=zeros(1,size(x1,2));
elseif (180<angle1) &&(angle1<270)
    x1=u3;
    y1=k(1,1)*x1+b(1,1);
elseif angle1==270
    y1=u3;
    x1=zeros(1,size(y1,2));
elseif (270<angle1) && (angle1<360)
    x1=u1;
    y1=k(1,1)*x1+b(1,1);
elseif angle1==360
    x1=u1;
    y1=zeros(1,size(x1,2));
    
end

if angle2==0
    x2=u1;
    y2=zeros(1,size(x2,2));
elseif (0<angle2) &&(angle2<90)
    x2=u1;
    y2=k(1,2)*x2+b(1,2);
elseif angle2==90
    y2=u3;
    x2=d*ones(1,size(y2,2));
elseif (90<angle2) &&(angle2<180)
    x2=u2;
    y2=k(1,2)*x2+b(1,2);
elseif angle2==180
    x2=u2;
    y2=zeros(1,size(x2,2));
elseif (180<angle2) &&(angle2<270)
    x2=u2;
    y2=k(1,2)*x2+b(1,2);
elseif angle2==270
    y2=u1;
    x2=d*ones(1,size(y2,2));
elseif (270<angle2) &&(angle2<360)
    x2=u1;
    y2=k(1,2)*x2+b(1,2);
elseif angle2==360
    x2=u1;
    y2=zeros(1,size(x2,2));
    


end




xy1=[x1' y1'];
xy2=[x2' y2'];

mxy1=size(xy1,1);
mxy2=size(xy2,1);
for ii=1:mxy2
    for i=1:mxy1
    n=(ii-1)*mxy1+i;
    xy(n,:)=[xy1(i,:) xy2(ii,:)];
end
end
mxy11=size(xy,1);
for i=1:mxy11
    if xy(i,1)==0 && xy(i,2)==0
        xy(i,:)=inf;
    end
end
for i=1:mxy11
    if xy(i,1)==d && xy(i,2)==0
        xy(i,:)=inf;
    end
end

for i=1:mxy11
    if xy(i,3)==0 && xy(i,4)==0
        xy(i,:)=inf;
    end
end
for i=1:mxy11
    if xy(i,3)==d && xy(i,4)==0
        xy(i,:)=inf;
    end
end

for i=1:mxy11%if the two control points are on the start end point line, ignore them
    if xy(i,2)==0 &&  xy(i,4)==0
        xy(i,:)=inf;
    end
end

N1=size(xy,1);
A1=xy(:,1);
B1=xy(:,2);
A2=xy(:,3);
B2=xy(:,4);
xx1=(-3)*A0*(1-u).^2+3*A1*(-2*u.*(1-u)+(1-u).^2)+3*A2*(-1*u.^2+2*u.*(1-u))+3*A3*u.^2;
yy1=(-3)*B0*(1-u).^2+3*B1*(-2*u.*(1-u)+(1-u).^2)+3*B2*(-1*u.^2+2*u.*(1-u))+3*B3*u.^2;
xx2=A0*(6-6*u)+A1*(18*u-12) +A2*(6-18*u)+6*A3*u;
yy2=B0*(6-6*u)+B1*(18*u-12) +B2*(6-18*u)+6*B3*u;
ra=(xx1.^2+yy1.^2).^(3/2);
rb=xx1.*yy2-yy1.*xx2;
R=ra./rb;
R=abs(R);
for i=1:size(R,1)
    for ii=1:size(u,2)
        
        if R(i,ii)<r
            R(i,:)=inf;
            path_Len(i,:)=inf;
            xx(i,:)=inf;
            yy(i,:)=inf;
            p1(i,:)=inf;
            p2(i,:)=inf;
        end
    end
end

xx=A0.*(1-u).^3 + 3*A1.*u.*(1-u).^2 + 3*A2.*u.^2.*(1-u) + A3.*u.^3;
yy=B0.*(1-u).^3 + B1.*3*u.*(1-u).^2 + 3*B2.*u.^2.*(1-u) + B3.*u.^3;
dx=diff(xx,1,2);
dy=diff(yy,1,2);
dl=sqrt(dx.^2+dy.^2);
path_Len=sum(dl,2);
xx1=(-3)*A0*(1-u).^2+3*A1*(-2*u.*(1-u)+(1-u).^2)+3*A2*(-1*u.^2+2*u.*(1-u))+3*A3*u.^2;
yy1=(-3)*B0*(1-u).^2+3*B1*(-2*u.*(1-u)+(1-u).^2)+3*B2*(-1*u.^2+2*u.*(1-u))+3*B3*u.^2;
xx2=A0*(6-6*u)+A1*(18*u-12) +A2*(6-18*u)+6*A3*u;
yy2=B0*(6-6*u)+B1*(18*u-12) +B2*(6-18*u)+6*B3*u;
ra=(xx1.^2+yy1.^2).^(3/2);
rb=xx1.*yy2-yy1.*xx2;
R=ra./rb;
R=abs(R);
for i=1:size(R,1)
    for ii=1:size(u,2)
        if R(i,ii)<r
            R(i,:)=inf;
            path_Len(i,:)=inf;
            xx(i,:)=inf;
            yy(i,:)=inf;
            p1(i,:)=inf;
            p2(i,:)=inf;
        end
    end
end

p1=[A1 B1];
p2=[A2 B2];
%plot(xx',yy');
%hold on;
%for i=1:size(p1,1) 
%plot(p1(i,1),p1(i,2),'*');
%end
%for i=1:size(p2,1) 
%plot(p2(i,1),p2(i,2),'o');
%end
%plot(p2,'o')
end
